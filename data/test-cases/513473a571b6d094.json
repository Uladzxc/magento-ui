{"uid":"513473a571b6d094","name":"test_check_if_free_shipping_info_displays","fullName":"tests.test_sale_page#test_check_if_free_shipping_info_displays","historyId":"b79aff3b4bcd9238ed7ee264541d4423","time":{"start":1758026057426,"stop":1758026067832,"duration":10406},"description":"Check if free shipping information displayed","descriptionHtml":"<p>Check if free shipping information displayed</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55fc8ac7194a <unknown>\n#1 0x55fc8a6e68a0 <unknown>\n#2 0x55fc8a738540 <unknown>\n#3 0x55fc8a738731 <unknown>\n#4 0x55fc8a786824 <unknown>\n#5 0x55fc8a75e05d <unknown>\n#6 0x55fc8a783c23 <unknown>\n#7 0x55fc8a75de03 <unknown>\n#8 0x55fc8a72a968 <unknown>\n#9 0x55fc8a72b5e1 <unknown>\n#10 0x55fc8ac35548 <unknown>\n#11 0x55fc8ac39272 <unknown>\n#12 0x55fc8ac1c313 <unknown>\n#13 0x55fc8ac39dc5 <unknown>\n#14 0x55fc8ac0149f <unknown>\n#15 0x55fc8ac5e158 <unknown>\n#16 0x55fc8ac5e332 <unknown>\n#17 0x55fc8ac70a53 <unknown>\n#18 0x7fc15829caa4 <unknown>\n#19 0x7fc158329c3c <unknown>","statusTrace":"sale_page = <pages.sale_page.Sale object at 0x7f2cd26d2550>\n\n    @pytest.mark.smoke\n    @allure.description('Check if free shipping information displayed')\n    def test_check_if_free_shipping_info_displays(sale_page):\n        sale_page.open_page()\n>       sale_page.check_the_shipping_info_text('Spend $50 or more â€” shipping is free!')\n\ntests/test_sale_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sale_page.py:24: in check_the_shipping_info_text\n    self.scroll_to_element(locator=loc.shipping_is_free_loc)\npages/base_page.py:36: in scroll_to_element\n    element = self.wait.until(ec.presence_of_element_located(locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bc77b857788f57616b7ee085dc529de3\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f2cd27094e0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55fc8ac7194a <unknown>\nE       #1 0x55fc8a6e68a0 <unknown>\nE       #2 0x55fc8a738540 <unknown>\nE       #3 0x55fc8a738731 <unknown>\nE       #4 0x55fc8a786824 <unknown>\nE       #5 0x55fc8a75e05d <unknown>\nE       #6 0x55fc8a783c23 <unknown>\nE       #7 0x55fc8a75de03 <unknown>\nE       #8 0x55fc8a72a968 <unknown>\nE       #9 0x55fc8a72b5e1 <unknown>\nE       #10 0x55fc8ac35548 <unknown>\nE       #11 0x55fc8ac39272 <unknown>\nE       #12 0x55fc8ac1c313 <unknown>\nE       #13 0x55fc8ac39dc5 <unknown>\nE       #14 0x55fc8ac0149f <unknown>\nE       #15 0x55fc8ac5e158 <unknown>\nE       #16 0x55fc8ac5e332 <unknown>\nE       #17 0x55fc8ac70a53 <unknown>\nE       #18 0x7fc15829caa4 <unknown>\nE       #19 0x7fc158329c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1758026057165,"stop":1758026057425,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sale_page","time":{"start":1758026057426,"stop":1758026057426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale_page"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"3495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":["smoke"]},"source":"513473a571b6d094.json","parameterValues":[]}